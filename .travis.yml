language: c
dist: xenial
sudo: required

arch:
    - amd64

addons:
    apt:
        packages:
            - asciidoctor
            - automake
            - autoconf
            - doxygen
            - graphviz
            - libconfig-dev
            - libssl-dev
            - libtool
            - mscgen
            - pkg-config
            - python3-pip
            - hugepages
            - docker

compiler:
    - gcc

script: skip

jobs:
    include:
        - stage: build
          env: BUILD=amd64,gcc
          script:
              - ./scripts/build.sh
        - stage: build
          env: BUILD=arm64,gcc
          arch: arm64
          script:
              - ./scripts/build.sh
        - stage: build
          env: BUILD=amd64,focal,gcc
          dist: bionic
          script:
              - git clone https://github.com/openeventmachine/ci.git
              - echo "git clone https://github.com/openeventmachine/em-odp.git && cd em-odp" >> ci/docker.sh
              - echo "cp -r /root/ci /root/em-odp" >> ci/docker.sh
              - echo "./scripts/build.sh" >> ci/docker.sh
              - docker run --privileged --name focal -i -t -v /dev/hugepages:/dev/hugepages -v ${PWD}:/root -w /root --shm-size 4g ubuntu:20.04 sh ci/docker.sh
        - stage: build
          env: BUILD=amd64,focal,clang
          dist: bionic
          script:
              - git clone https://github.com/openeventmachine/ci.git
              - echo "apt remove gcc -y" >> ci/docker.sh
              - echo "apt install clang -y" >> ci/docker.sh
              - echo "git clone https://github.com/openeventmachine/em-odp.git && cd em-odp" >> ci/docker.sh
              - echo "cp -r /root/ci /root/em-odp" >> ci/docker.sh
              - echo "./scripts/build.sh" >> ci/docker.sh
              - docker run --privileged --name focal -i -t -v /dev/hugepages:/dev/hugepages -v ${PWD}:/root -w /root --shm-size 4g ubuntu:20.04 sh ci/docker.sh
        - stage: test
          env: TEST=amd64,bionic,gcc
          dist: bionic
          script:
              - sudo pip3 install robotframework
              - ./scripts/build.sh
              - git clone https://github.com/openeventmachine/ci.git
              - ./ci/env.sh
              - ./ci/test.sh
        - stage: test
          env: TEST=arm64,bionic,gcc
          arch: arm64
          dist: bionic
          sudo: required
          script:
              - sudo pip3 install robotframework
              - ./scripts/build.sh
              - git clone https://github.com/openeventmachine/ci.git
              - ./ci/env.sh
              - ./ci/test.sh
        - stage: Documentation
          env: TEST=documentation
          script:
              - ./scripts/build.sh
              - make doxygen-doc
          before_deploy:
              - pushd doc
              - mkdir gh-pages
              - cp -r event_machine_api/html/* gh-pages/
              - popd
          deploy:
              provider: pages
              skip_cleanup: true
              local_dir: doc/gh-pages
              github_token: $GH_REPO_TOKEN
              on:
                  branch: master
                  condition: "x$GH_REPO_TOKEN != x"
